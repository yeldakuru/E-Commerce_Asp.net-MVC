// <auto-generated />
using System;
using ECommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20251019194816_SeedProducts")]
    partial class SeedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Core.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 596, DateTimeKind.Local).AddTicks(45),
                            Email = "admin@gmail.com",
                            IsActive = true,
                            IsAdmin = true,
                            Name = "test",
                            Password = "123456",
                            Surname = "user",
                            UserGuid = new Guid("67f1bc16-3be7-435f-a07c-e02359067ca2"),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(1025),
                            Email = "yelda@example.com",
                            IsActive = true,
                            IsAdmin = false,
                            Name = "Yelda",
                            Password = "123456",
                            Surname = "Kuru",
                            UserGuid = new Guid("0dff9903-fee7-4c5f-9999-dc6407734661"),
                            UserName = "yelda"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(1044),
                            Email = "ahmet@example.com",
                            IsActive = true,
                            IsAdmin = false,
                            Name = "Ahmet",
                            Password = "654321",
                            Surname = "Demir",
                            UserGuid = new Guid("2c83fb31-1832-42a8-a488-578719336032"),
                            UserName = "ahmet"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(1046),
                            Email = "elif@example.com",
                            IsActive = true,
                            IsAdmin = false,
                            Name = "Elif",
                            Password = "123123",
                            Surname = "Yılmaz",
                            UserGuid = new Guid("30dfec20-25db-41d4-9d73-85e9808c805c"),
                            UserName = "elif"
                        });
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8066),
                            IsActive = false,
                            Name = "Asus",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8379),
                            IsActive = false,
                            Name = "HP",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8381),
                            IsActive = false,
                            Name = "Sony",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8382),
                            IsActive = false,
                            Name = "MSI",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8382),
                            IsActive = false,
                            Name = "Logitech",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8383),
                            IsActive = false,
                            Name = "Apple",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8383),
                            IsActive = false,
                            Name = "Samsung",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8384),
                            IsActive = false,
                            Name = "Dell",
                            OrderNo = 0
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 597, DateTimeKind.Local).AddTicks(8385),
                            IsActive = false,
                            Name = "Canon",
                            OrderNo = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTopMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 598, DateTimeKind.Local).AddTicks(2071),
                            IsActive = true,
                            IsTopMenu = true,
                            Name = "Elektronik",
                            OrderNo = 1,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 598, DateTimeKind.Local).AddTicks(2704),
                            IsActive = true,
                            IsTopMenu = true,
                            Name = "Bilgisayar",
                            OrderNo = 2,
                            ParentId = 0
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 598, DateTimeKind.Local).AddTicks(2707),
                            IsActive = true,
                            IsTopMenu = false,
                            Name = "Monitör",
                            OrderNo = 3,
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 598, DateTimeKind.Local).AddTicks(2708),
                            IsActive = true,
                            IsTopMenu = false,
                            Name = "Klavye",
                            OrderNo = 4,
                            ParentId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 598, DateTimeKind.Local).AddTicks(2709),
                            IsActive = true,
                            IsTopMenu = false,
                            Name = "Konsol",
                            OrderNo = 5,
                            ParentId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 598, DateTimeKind.Local).AddTicks(2710),
                            IsActive = true,
                            IsTopMenu = false,
                            Name = "Aksesuar",
                            OrderNo = 6,
                            ParentId = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ECommerce.Core.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(5579),
                            Description = "15.6 inç Full HD, Ryzen 7 işlemci, 16 GB RAM, 512 GB SSD",
                            IsActive = true,
                            IsHome = true,
                            Name = "Asus TUF Gaming Laptop",
                            OrderNo = 1,
                            Price = 32999.90m,
                            ProductCode = "ASUS-TUF-01",
                            Stock = 25
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6728),
                            Description = "13.3 inç, Intel i5, 8 GB RAM, 256 GB SSD",
                            IsActive = true,
                            IsHome = false,
                            Name = "HP Pavilion Laptop",
                            OrderNo = 2,
                            Price = 21499.50m,
                            ProductCode = "HP-PAV-02",
                            Stock = 18
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CategoryId = 5,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6732),
                            Description = "825 GB SSD, DualSense kumanda dahil",
                            IsActive = true,
                            IsHome = true,
                            Name = "Sony PlayStation 5",
                            OrderNo = 3,
                            Price = 25999.00m,
                            ProductCode = "SONY-PS5",
                            Stock = 10
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CategoryId = 3,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6734),
                            Description = "27 inç, 165Hz, 1ms, kavisli oyun monitörü",
                            IsActive = true,
                            IsHome = false,
                            Name = "MSI Optix Monitör",
                            OrderNo = 4,
                            Price = 8999.99m,
                            ProductCode = "MSI-MON-04",
                            Stock = 15
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            CategoryId = 4,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6736),
                            Description = "RGB aydınlatmalı, suya dayanıklı, oyun klavyesi",
                            IsActive = true,
                            IsHome = false,
                            Name = "Logitech G213 Klavye",
                            OrderNo = 5,
                            Price = 2499.90m,
                            ProductCode = "LOGI-KLAV-05",
                            Stock = 40
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6769),
                            Description = "13.3 inç Retina, M1 çip, 8 GB RAM, 256 GB SSD",
                            IsActive = true,
                            IsHome = true,
                            Name = "Apple MacBook Air",
                            OrderNo = 6,
                            Price = 23999.00m,
                            ProductCode = "APPLE-MBA-06",
                            Stock = 12
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 7,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6772),
                            Description = "11 inç, Snapdragon 865+, 6 GB RAM, 128 GB depolama",
                            IsActive = true,
                            IsHome = false,
                            Name = "Samsung Galaxy Tab S7",
                            OrderNo = 7,
                            Price = 10999.90m,
                            ProductCode = "SAMSUNG-TAB-07",
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 8,
                            CategoryId = 2,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6773),
                            Description = "13.4 inç FHD+, Intel i7, 16 GB RAM, 512 GB SSD",
                            IsActive = true,
                            IsHome = true,
                            Name = "Dell XPS 13 Laptop",
                            OrderNo = 8,
                            Price = 27999.50m,
                            ProductCode = "DELL-XPS13-08",
                            Stock = 14
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 9,
                            CategoryId = 1,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6775),
                            Description = "24.1 MP, 4K video, döndürülebilir ekran",
                            IsActive = true,
                            IsHome = false,
                            Name = "Canon EOS M50 Kamera",
                            OrderNo = 9,
                            Price = 7499.99m,
                            ProductCode = "CANON-EOSM50-09",
                            Stock = 22
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 3,
                            CategoryId = 6,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6777),
                            Description = "Gürültü engelleme, Bluetooth 5.3, 30 saat pil",
                            IsActive = true,
                            IsHome = false,
                            Name = "Sony WH-1000XM5 Kulaklık",
                            OrderNo = 10,
                            Price = 9999.90m,
                            ProductCode = "SONY-WH1000XM5",
                            Stock = 25
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CategoryId = 4,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6779),
                            Description = "RGB mekanik oyun klavyesi, dayanıklı tuş yapısı",
                            IsActive = true,
                            IsHome = false,
                            Name = "Asus ROG Klavye",
                            OrderNo = 11,
                            Price = 3499.99m,
                            ProductCode = "ASUS-ROG-KLAV",
                            Stock = 30
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 4,
                            CategoryId = 6,
                            CreateDate = new DateTime(2025, 10, 19, 22, 48, 15, 599, DateTimeKind.Local).AddTicks(6781),
                            Description = "7200 DPI, ergonomik tasarım, RGB ışıklandırma",
                            IsActive = true,
                            IsHome = false,
                            Name = "MSI Gaming Mouse",
                            OrderNo = 12,
                            Price = 1599.50m,
                            ProductCode = "MSI-MOUSE-12",
                            Stock = 35
                        });
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Link")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Core.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("ECommerce.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
